{
  "address": "0x81b74b18Fa8D079A0712C3db774D3Ee44BCE3FfE",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "distributorId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "energyAvailableToBuy",
          "type": "uint256"
        }
      ],
      "name": "DistributorAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "distributorId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "substationId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "prevSubstationId",
          "type": "uint256"
        }
      ],
      "name": "DistributorConnectedToSubstation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "powerplantId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "energyAdded",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "EnergyAddedByPowerPlant",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "distributorId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "energyBought",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "EnergyBoughtByDistributor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "substationId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "energyBought",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "EnergyBoughtBySubstation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "powerplantId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "PowerPlantAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "substationId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "energyAvailableToBuy",
          "type": "uint256"
        }
      ],
      "name": "SubstationAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "substationId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "powerPlantId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "prevPowerplantId",
          "type": "uint256"
        }
      ],
      "name": "SubstationConnectedToPowerPlant",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_area",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_energyAvailableToBuy",
          "type": "uint256"
        }
      ],
      "name": "addDistributor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_energyAvailableToBuy",
          "type": "uint256"
        }
      ],
      "name": "addEnergyAvailableToBuy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_area",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_energyAvailableToBuy",
          "type": "uint256"
        }
      ],
      "name": "addPowerPlant",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_energyAvailableToBuy",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_area",
          "type": "string"
        }
      ],
      "name": "addSubstation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_energyAmount",
          "type": "uint256"
        }
      ],
      "name": "buyEnergyFromPowerPlant",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_energyAmount",
          "type": "uint256"
        }
      ],
      "name": "buyEnergyFromSubstation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_substationIndex",
          "type": "uint256"
        }
      ],
      "name": "connectDistributorToSubstation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "powerplantIndex",
          "type": "uint256"
        }
      ],
      "name": "connectSubstationToPowerplant",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "distributorAddressToIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "distributors",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "substationId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "distributorAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "area",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "energyAvailable",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalEnergySold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalEnergyBought",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_distributorIndex",
          "type": "uint256"
        }
      ],
      "name": "getDistributorById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "substationId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "distributorAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "area",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "energyAvailable",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "consumerIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "totalEnergySold",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalEnergyBought",
              "type": "uint256"
            }
          ],
          "internalType": "struct ElectricitySupplyChain.Distributor",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_distributorIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_day",
          "type": "uint256"
        }
      ],
      "name": "getDistributorEnergyBoguhtByDay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_powerplantIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_day",
          "type": "uint256"
        }
      ],
      "name": "getPowerPlantEnergyProducedByDay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_powerplantIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_day",
          "type": "uint256"
        }
      ],
      "name": "getPowerPlantEnergySoldByDay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_powerplantIndex",
          "type": "uint256"
        }
      ],
      "name": "getPowerplantById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "area",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "powerplantAddress",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "substationIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "totalEnergyProduced",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalEnergySold",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "energyAvailableToBuy",
              "type": "uint256"
            }
          ],
          "internalType": "struct ElectricitySupplyChain.PowerPlant",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_substationIndex",
          "type": "uint256"
        }
      ],
      "name": "getSubstationById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "area",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "powerplantId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "substationAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalEnergyReceived",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalEnergySold",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "distributorIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "energyAvailableToBuy",
              "type": "uint256"
            }
          ],
          "internalType": "struct ElectricitySupplyChain.Substation",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_substationIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_day",
          "type": "uint256"
        }
      ],
      "name": "getSubstationEnergyBoughtByDay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_substationIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_day",
          "type": "uint256"
        }
      ],
      "name": "getSubstationEnergySoldByDay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_powerplantIndex",
          "type": "uint256"
        }
      ],
      "name": "getSubstationsOfPowerPlant",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "area",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "powerplantId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "substationAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalEnergyReceived",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalEnergySold",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "distributorIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "energyAvailableToBuy",
              "type": "uint256"
            }
          ],
          "internalType": "struct ElectricitySupplyChain.Substation[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "powerPlants",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "area",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "powerplantAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalEnergyProduced",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalEnergySold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "energyAvailableToBuy",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "powerPlantsAddressToIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "substations",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "area",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "powerplantId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "substationAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalEnergyReceived",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalEnergySold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "energyAvailableToBuy",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "substationsAddressToIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x917cd112c34c6a8b0b8bc17d2f1f7925fe49e3084aefc4bd7a3200b7a74ad972",
  "receipt": {
    "to": null,
    "from": "0x11a626e808427091147eF35C1790557453Bdf79F",
    "contractAddress": "0x81b74b18Fa8D079A0712C3db774D3Ee44BCE3FfE",
    "transactionIndex": 2,
    "gasUsed": "3949484",
    "logsBloom": "0x
    "blockHash": "0x6f522a4938722e9a0aabc71daccc0fc7a19b12290e14b8132631d3ae005b83e0",
    "transactionHash": "0x917cd112c34c6a8b0b8bc17d2f1f7925fe49e3084aefc4bd7a3200b7a74ad972",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 33096849,
        "transactionHash": "0x917cd112c34c6a8b0b8bc17d2f1f7925fe49e3084aefc4bd7a3200b7a74ad972",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x00000000000000000000000011a626e808427091147ef35c1790557453bdf79f",
          "0x000000000000000000000000c275dc8be39f50d12f66b6a63629c39da5bae5bd"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000017aa0255b0bf6c00000000000000000000000000000000000000000000000003365704e245d80f000000000000000000000000000000000000000000000e76f60c0b0864302563000000000000000000000000000000000000000000000000031ead028c9518a3000000000000000000000000000000000000000000000e76f623b50ab9e0e4cf",
        "logIndex": 6,
        "blockHash": "0x6f522a4938722e9a0aabc71daccc0fc7a19b12290e14b8132631d3ae005b83e0"
      }
    ],
    "blockNumber": 33096849,
    "cumulativeGasUsed": "4190059",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 4,
  "solcInputHash": "095dfd7f1943345a7480f970ddd2729f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"distributorId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"energyAvailableToBuy\",\"type\":\"uint256\"}],\"name\":\"DistributorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"distributorId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"substationId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"prevSubstationId\",\"type\":\"uint256\"}],\"name\":\"DistributorConnectedToSubstation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"powerplantId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"energyAdded\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"EnergyAddedByPowerPlant\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"distributorId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"energyBought\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"EnergyBoughtByDistributor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"substationId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"energyBought\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"EnergyBoughtBySubstation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"powerplantId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"PowerPlantAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"substationId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"energyAvailableToBuy\",\"type\":\"uint256\"}],\"name\":\"SubstationAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"substationId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"powerPlantId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"prevPowerplantId\",\"type\":\"uint256\"}],\"name\":\"SubstationConnectedToPowerPlant\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_area\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_energyAvailableToBuy\",\"type\":\"uint256\"}],\"name\":\"addDistributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_energyAvailableToBuy\",\"type\":\"uint256\"}],\"name\":\"addEnergyAvailableToBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_area\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_energyAvailableToBuy\",\"type\":\"uint256\"}],\"name\":\"addPowerPlant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_energyAvailableToBuy\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_area\",\"type\":\"string\"}],\"name\":\"addSubstation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_energyAmount\",\"type\":\"uint256\"}],\"name\":\"buyEnergyFromPowerPlant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_energyAmount\",\"type\":\"uint256\"}],\"name\":\"buyEnergyFromSubstation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_substationIndex\",\"type\":\"uint256\"}],\"name\":\"connectDistributorToSubstation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"powerplantIndex\",\"type\":\"uint256\"}],\"name\":\"connectSubstationToPowerplant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"distributorAddressToIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"distributors\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"substationId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"distributorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"area\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"energyAvailable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalEnergySold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalEnergyBought\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_distributorIndex\",\"type\":\"uint256\"}],\"name\":\"getDistributorById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"substationId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"distributorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"area\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"energyAvailable\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"consumerIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"totalEnergySold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalEnergyBought\",\"type\":\"uint256\"}],\"internalType\":\"struct ElectricitySupplyChain.Distributor\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_distributorIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_day\",\"type\":\"uint256\"}],\"name\":\"getDistributorEnergyBoguhtByDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_powerplantIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_day\",\"type\":\"uint256\"}],\"name\":\"getPowerPlantEnergyProducedByDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_powerplantIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_day\",\"type\":\"uint256\"}],\"name\":\"getPowerPlantEnergySoldByDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_powerplantIndex\",\"type\":\"uint256\"}],\"name\":\"getPowerplantById\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"area\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"powerplantAddress\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"substationIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"totalEnergyProduced\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalEnergySold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"energyAvailableToBuy\",\"type\":\"uint256\"}],\"internalType\":\"struct ElectricitySupplyChain.PowerPlant\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_substationIndex\",\"type\":\"uint256\"}],\"name\":\"getSubstationById\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"area\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"powerplantId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"substationAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalEnergyReceived\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalEnergySold\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"distributorIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"energyAvailableToBuy\",\"type\":\"uint256\"}],\"internalType\":\"struct ElectricitySupplyChain.Substation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_substationIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_day\",\"type\":\"uint256\"}],\"name\":\"getSubstationEnergyBoughtByDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_substationIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_day\",\"type\":\"uint256\"}],\"name\":\"getSubstationEnergySoldByDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_powerplantIndex\",\"type\":\"uint256\"}],\"name\":\"getSubstationsOfPowerPlant\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"area\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"powerplantId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"substationAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalEnergyReceived\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalEnergySold\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"distributorIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"energyAvailableToBuy\",\"type\":\"uint256\"}],\"internalType\":\"struct ElectricitySupplyChain.Substation[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"powerPlants\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"area\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"powerplantAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalEnergyProduced\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalEnergySold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"energyAvailableToBuy\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"powerPlantsAddressToIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"substations\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"area\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"powerplantId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"substationAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalEnergyReceived\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalEnergySold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"energyAvailableToBuy\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"substationsAddressToIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ElectricitySupplyChain.sol\":\"ElectricitySupplyChain\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ElectricitySupplyChain.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n// import \\\"hardhat/console.sol\\\";\\r\\n\\r\\ncontract ElectricitySupplyChain {\\r\\n    event PowerPlantAdded(uint256 indexed powerplantId, address indexed owner);\\r\\n    event EnergyAddedByPowerPlant(\\r\\n        uint256 indexed powerplantId,\\r\\n        uint256 energyAdded,\\r\\n        uint256 date\\r\\n    );\\r\\n\\r\\n    event SubstationAdded(\\r\\n        uint256 indexed substationId,\\r\\n        address indexed owner,\\r\\n        uint256 energyAvailableToBuy\\r\\n    );\\r\\n    event SubstationConnectedToPowerPlant(\\r\\n        uint256 indexed substationId,\\r\\n        uint256 indexed powerPlantId,\\r\\n        uint256 indexed prevPowerplantId\\r\\n    );\\r\\n    event EnergyBoughtBySubstation(\\r\\n        uint256 indexed substationId,\\r\\n        uint256 energyBought,\\r\\n        uint256 date\\r\\n    );\\r\\n\\r\\n    event DistributorAdded(\\r\\n        uint256 indexed distributorId,\\r\\n        address indexed owner,\\r\\n        uint256 energyAvailableToBuy\\r\\n    );\\r\\n    event DistributorConnectedToSubstation(\\r\\n        uint256 indexed distributorId,\\r\\n        uint256 indexed substationId,\\r\\n        uint256 indexed prevSubstationId\\r\\n    );\\r\\n    event EnergyBoughtByDistributor(\\r\\n        uint256 indexed distributorId,\\r\\n        uint256 energyBought,\\r\\n        uint256 date\\r\\n    );\\r\\n    // Define the Distributor struct\\r\\n    struct Distributor {\\r\\n        uint256 substationId;\\r\\n        address distributorAddress;\\r\\n        string name;\\r\\n        string area;\\r\\n        uint256 energyAvailable;\\r\\n        uint256[] consumerIds;\\r\\n        uint256 totalEnergySold;\\r\\n        uint256 totalEnergyBought;\\r\\n    }\\r\\n\\r\\n    // Define the Substation struct\\r\\n    struct Substation {\\r\\n        string name;\\r\\n        string area;\\r\\n        uint256 powerplantId;\\r\\n        address substationAddress;\\r\\n        uint256 totalEnergyReceived;\\r\\n        uint256 totalEnergySold;\\r\\n        uint256[] distributorIds;\\r\\n        uint256 energyAvailableToBuy;\\r\\n    }\\r\\n\\r\\n    // Define the PowerPlant struct\\r\\n    struct PowerPlant {\\r\\n        string name;\\r\\n        string area;\\r\\n        address powerplantAddress;\\r\\n        uint256[] substationIds;\\r\\n        uint256 totalEnergyProduced;\\r\\n        uint256 totalEnergySold;\\r\\n        uint256 energyAvailableToBuy;\\r\\n    }\\r\\n\\r\\n    // Define an array to hold all the power plants\\r\\n    mapping(uint256 => PowerPlant) public powerPlants;\\r\\n    mapping(address => uint256) public powerPlantsAddressToIds;\\r\\n    mapping(uint256 => mapping(uint256 => uint256)) powerPlantsDailyEnergyProducedById;\\r\\n    mapping(uint256 => mapping(uint256 => uint256)) powerPlantsDailyEnergySoldById;\\r\\n\\r\\n    mapping(uint256 => Distributor) public distributors;\\r\\n    mapping(address => uint256) public distributorAddressToIds;\\r\\n    // distributorId -> date -> energy bought\\r\\n    mapping(uint256 => mapping(uint256 => uint256)) distributorsDailyEnergyBoughtById;\\r\\n\\r\\n    mapping(uint256 => Substation) public substations;\\r\\n    mapping(address => uint256) public substationsAddressToIds;\\r\\n\\r\\n    mapping(uint256 => mapping(uint256 => uint256)) substationsDailyEnergyBoughtById;\\r\\n    mapping(uint256 => mapping(uint256 => uint256)) substationsDailyEnergySoldById;\\r\\n\\r\\n    // ids for each entity\\r\\n    uint256 powerPlantCount;\\r\\n    uint256 distributorCount;\\r\\n    uint256 substationCount;\\r\\n\\r\\n    // Define a function to add a new power plant to the supply chain\\r\\n    function addPowerPlant(\\r\\n        string memory _name,\\r\\n        string memory _area,\\r\\n        uint256 _energyAvailableToBuy\\r\\n    ) public {\\r\\n        uint256 powerplantId = powerPlantsAddressToIds[msg.sender];\\r\\n        // check if power plant does not exist with the wallet address\\r\\n        require(powerplantId == 0, \\\"Power plant already exists\\\");\\r\\n        powerPlantCount += 1;\\r\\n        PowerPlant storage powerplant = powerPlants[powerPlantCount];\\r\\n        powerPlantsAddressToIds[msg.sender] = powerPlantCount;\\r\\n        // Create a new PowerPlant struct\\r\\n        powerplant.powerplantAddress = msg.sender;\\r\\n        powerplant.name = _name;\\r\\n        powerplant.area = _area;\\r\\n        powerplant.energyAvailableToBuy = _energyAvailableToBuy;\\r\\n        powerplant.totalEnergyProduced = _energyAvailableToBuy;\\r\\n        uint256 today = block.timestamp / 86400;\\r\\n        powerPlantsDailyEnergyProducedById[powerPlantCount][\\r\\n            today\\r\\n        ] = _energyAvailableToBuy;\\r\\n        emit PowerPlantAdded(powerPlantCount, msg.sender);\\r\\n    }\\r\\n\\r\\n    // Define a function to add a new substation to a power plant\\r\\n    function addSubstation(\\r\\n        uint256 _energyAvailableToBuy,\\r\\n        string memory _name,\\r\\n        string memory _area\\r\\n    ) public {\\r\\n        require(\\r\\n            substationsAddressToIds[msg.sender] == 0,\\r\\n            \\\"Substation already exists with the current address\\\"\\r\\n        );\\r\\n        substationCount += 1;\\r\\n        Substation storage substation = substations[substationCount];\\r\\n        substationsAddressToIds[msg.sender] = substationCount;\\r\\n        substation.name = _name;\\r\\n        substation.area = _area;\\r\\n        substation.substationAddress = msg.sender;\\r\\n        substation.energyAvailableToBuy = _energyAvailableToBuy;\\r\\n        // add substation id to the power plant\\r\\n\\r\\n        emit SubstationAdded(\\r\\n            substationCount,\\r\\n            msg.sender,\\r\\n            _energyAvailableToBuy\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function connectSubstationToPowerplant(\\r\\n        uint256 powerplantIndex\\r\\n    ) public onlySubstationOwner powerPlantExists(powerplantIndex) {\\r\\n       \\r\\n        Substation storage substation = substations[\\r\\n            substationsAddressToIds[msg.sender]\\r\\n        ];\\r\\n        uint256 prevPlantId = substation.powerplantId;\\r\\n        if (substation.powerplantId != 0) {\\r\\n            PowerPlant storage prevPlant = powerPlants[substation.powerplantId];\\r\\n            uint256 index;\\r\\n            for (uint256 i = 0; i < prevPlant.substationIds.length; i++) {\\r\\n                if (\\r\\n                    prevPlant.substationIds[i] ==\\r\\n                    substationsAddressToIds[msg.sender]\\r\\n                ) {\\r\\n                    index = i;\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n            for (uint i = index; i < prevPlant.substationIds.length - 1; i++) {\\r\\n                prevPlant.substationIds[i] = prevPlant.substationIds[i + 1];\\r\\n            }\\r\\n            prevPlant.substationIds.pop();\\r\\n        }\\r\\n        substation.powerplantId = powerplantIndex;\\r\\n        PowerPlant storage powerplant = powerPlants[powerplantIndex];\\r\\n        powerplant.substationIds.push(substationsAddressToIds[msg.sender]);\\r\\n        emit SubstationConnectedToPowerPlant(\\r\\n            substationsAddressToIds[msg.sender],\\r\\n            powerplantIndex,\\r\\n            prevPlantId\\r\\n        );\\r\\n    }\\r\\n\\r\\n    // Define a function to add energy available to buy for a powerplant\\r\\n    function addEnergyAvailableToBuy(\\r\\n        uint256 _energyAvailableToBuy\\r\\n    ) public onlyPowerPlantOwner {\\r\\n        uint256 powerplantId = powerPlantsAddressToIds[msg.sender];\\r\\n        PowerPlant storage powerPlant = powerPlants[powerplantId];\\r\\n        powerPlant.energyAvailableToBuy += _energyAvailableToBuy;\\r\\n        // Update the daily energy produced mapping\\r\\n        uint256 today = block.timestamp / 86400;\\r\\n        powerPlantsDailyEnergyProducedById[powerplantId][\\r\\n            today\\r\\n        ] += _energyAvailableToBuy;\\r\\n        powerPlant.totalEnergyProduced += _energyAvailableToBuy;\\r\\n        emit EnergyAddedByPowerPlant(\\r\\n            powerplantId,\\r\\n            _energyAvailableToBuy,\\r\\n            today\\r\\n        );\\r\\n    }\\r\\n\\r\\n    // Define a function for a substation to buy energy from a power plant\\r\\n    function buyEnergyFromPowerPlant(\\r\\n        uint256 _energyAmount\\r\\n    ) public onlySubstationOwner {\\r\\n        uint256 substationId = substationsAddressToIds[msg.sender];\\r\\n        Substation storage substation = substations[substationId];\\r\\n        // Get the power plant from the powerPlants array\\r\\n        PowerPlant storage powerPlant = powerPlants[substation.powerplantId];\\r\\n        require(\\r\\n            powerPlant.energyAvailableToBuy >= _energyAmount,\\r\\n            \\\"Insufficient energy available to buy\\\"\\r\\n        );\\r\\n        powerPlant.energyAvailableToBuy -= _energyAmount;\\r\\n        substation.totalEnergyReceived += _energyAmount;\\r\\n        // Update the daily energy bought mapping\\r\\n        uint256 today = block.timestamp / 86400;\\r\\n        substationsDailyEnergyBoughtById[substationId][today] += _energyAmount;\\r\\n        substation.energyAvailableToBuy += _energyAmount;\\r\\n        powerPlantsDailyEnergySoldById[substation.powerplantId][\\r\\n            today\\r\\n        ] += _energyAmount;\\r\\n        powerPlant.totalEnergySold += _energyAmount;\\r\\n        emit EnergyBoughtBySubstation(\\r\\n            substationsAddressToIds[msg.sender],\\r\\n            _energyAmount,\\r\\n            today\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function addDistributor(\\r\\n        string memory _name,\\r\\n        string memory _area,\\r\\n        uint256 _energyAvailableToBuy\\r\\n    ) public {\\r\\n        require(\\r\\n            distributorAddressToIds[msg.sender] == 0,\\r\\n            \\\"Distributor already exists with the address\\\"\\r\\n        );\\r\\n        distributorCount += 1;\\r\\n        Distributor storage distributor = distributors[distributorCount];\\r\\n        distributorAddressToIds[msg.sender]=distributorCount;\\r\\n        distributor.name = _name;\\r\\n        distributor.area = _area;\\r\\n        distributor.distributorAddress = msg.sender;\\r\\n        distributor.energyAvailable = _energyAvailableToBuy;\\r\\n        emit DistributorAdded(\\r\\n            distributorCount,\\r\\n            msg.sender,\\r\\n            _energyAvailableToBuy\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function connectDistributorToSubstation(\\r\\n        uint256 _substationIndex\\r\\n    ) public onlyDistributorOwner substationExists(_substationIndex) {\\r\\n        Distributor storage distributor = distributors[\\r\\n            distributorAddressToIds[msg.sender]\\r\\n        ];\\r\\n        uint256 prevSubstationIndex = distributor.substationId;\\r\\n        if (distributor.substationId != 0) {\\r\\n            Substation storage prevSubstation = substations[\\r\\n                distributor.substationId\\r\\n            ];\\r\\n            uint256 index;\\r\\n            for (uint256 i = 0; i < prevSubstation.distributorIds.length; i++) {\\r\\n                if (\\r\\n                    prevSubstation.distributorIds[i] ==\\r\\n                    distributorAddressToIds[msg.sender]\\r\\n                ) {\\r\\n                    index = i;\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n            for (\\r\\n                uint i = index;\\r\\n                i < prevSubstation.distributorIds.length - 1;\\r\\n                i++\\r\\n            ) {\\r\\n                prevSubstation.distributorIds[i] = prevSubstation\\r\\n                    .distributorIds[i + 1];\\r\\n            }\\r\\n            prevSubstation.distributorIds.pop();\\r\\n        }\\r\\n        distributor.substationId = _substationIndex;\\r\\n        Substation storage substation = substations[_substationIndex];\\r\\n        substation.distributorIds.push(substationsAddressToIds[msg.sender]);\\r\\n        emit DistributorConnectedToSubstation(\\r\\n            distributorAddressToIds[msg.sender],\\r\\n            _substationIndex,\\r\\n            prevSubstationIndex\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function buyEnergyFromSubstation(\\r\\n        uint256 _energyAmount\\r\\n    ) public onlyDistributorOwner {\\r\\n        uint256 distributorId = distributorAddressToIds[msg.sender];\\r\\n        Distributor storage distributor = distributors[distributorId];\\r\\n        // Get the power plant from the powerPlants array\\r\\n        Substation storage substation = substations[distributor.substationId];\\r\\n        require(\\r\\n            substation.energyAvailableToBuy >= _energyAmount,\\r\\n            \\\"Insufficient energy available to buy\\\"\\r\\n        );\\r\\n        substation.energyAvailableToBuy -= _energyAmount;\\r\\n        distributor.totalEnergyBought += _energyAmount;\\r\\n        // Update the daily energy bought mapping\\r\\n        uint256 today = block.timestamp / 86400;\\r\\n        distributorsDailyEnergyBoughtById[distributorId][\\r\\n            today\\r\\n        ] += _energyAmount;\\r\\n        distributor.energyAvailable += _energyAmount;\\r\\n        substationsDailyEnergySoldById[distributor.substationId][\\r\\n            today\\r\\n        ] += _energyAmount;\\r\\n\\r\\n        emit EnergyBoughtByDistributor(distributorId, _energyAmount, today);\\r\\n    }\\r\\n\\r\\n    // powerplants\\r\\n    function getPowerplantById(\\r\\n        uint256 _powerplantIndex\\r\\n    )\\r\\n        public\\r\\n        view\\r\\n        powerPlantExists(_powerplantIndex)\\r\\n        returns (PowerPlant memory)\\r\\n    {\\r\\n        return powerPlants[_powerplantIndex];\\r\\n    }\\r\\n\\r\\n    function getPowerPlantEnergySoldByDay(\\r\\n        uint256 _powerplantIndex,\\r\\n        uint256 _day\\r\\n    ) public view powerPlantExists(_powerplantIndex) returns (uint256) {\\r\\n        return powerPlantsDailyEnergySoldById[_powerplantIndex][_day];\\r\\n    }\\r\\n\\r\\n    function getPowerPlantEnergyProducedByDay(\\r\\n        uint256 _powerplantIndex,\\r\\n        uint256 _day\\r\\n    ) public view powerPlantExists(_powerplantIndex) returns (uint256) {\\r\\n        return powerPlantsDailyEnergyProducedById[_powerplantIndex][_day];\\r\\n    }\\r\\n\\r\\n    function getSubstationsOfPowerPlant(\\r\\n        uint256 _powerplantIndex\\r\\n    )\\r\\n        external\\r\\n        view\\r\\n        powerPlantExists(_powerplantIndex)\\r\\n        returns (Substation[] memory)\\r\\n    {\\r\\n        uint256[] memory substationIds = getPowerplantById(_powerplantIndex)\\r\\n            .substationIds;\\r\\n        Substation[] memory substationsArray = new Substation[](\\r\\n            substationIds.length\\r\\n        );\\r\\n        for (uint256 i = 0; i < substationIds.length; i++) {\\r\\n            substationsArray[i] = (getSubstationById(substationIds[i]));\\r\\n        }\\r\\n        return substationsArray;\\r\\n    }\\r\\n\\r\\n    // substations\\r\\n    function getSubstationById(\\r\\n        uint256 _substationIndex\\r\\n    )\\r\\n        public\\r\\n        view\\r\\n        substationExists(_substationIndex)\\r\\n        returns (Substation memory)\\r\\n    {\\r\\n        return substations[_substationIndex];\\r\\n    }\\r\\n\\r\\n    function getSubstationEnergySoldByDay(\\r\\n        uint256 _substationIndex,\\r\\n        uint256 _day\\r\\n    ) public view substationExists(_substationIndex) returns (uint256) {\\r\\n        return substationsDailyEnergySoldById[_substationIndex][_day];\\r\\n    }\\r\\n\\r\\n    function getSubstationEnergyBoughtByDay(\\r\\n        uint256 _substationIndex,\\r\\n        uint256 _day\\r\\n    ) public view substationExists(_substationIndex) returns (uint256) {\\r\\n        return substationsDailyEnergyBoughtById[_substationIndex][_day];\\r\\n    }\\r\\n\\r\\n    // distributors\\r\\n    function getDistributorById(\\r\\n        uint256 _distributorIndex\\r\\n    )\\r\\n        public\\r\\n        view\\r\\n        distributorExists(_distributorIndex)\\r\\n        returns (Distributor memory)\\r\\n    {\\r\\n        return distributors[_distributorIndex];\\r\\n    }\\r\\n\\r\\n    // function getdistributorEnergySoldByDay(\\r\\n    //     uint256 _distributorIndex,\\r\\n    //     uint256 _day\\r\\n    // ) public view distributorExists(_distributorIndex) returns (uint256) {\\r\\n    //     return distributorsDailyEnergySoldById[_distributorIndex][_day];\\r\\n    // }\\r\\n\\r\\n    function getDistributorEnergyBoguhtByDay(\\r\\n        uint256 _distributorIndex,\\r\\n        uint256 _day\\r\\n    ) public view distributorExists(_distributorIndex) returns (uint256) {\\r\\n        return distributorsDailyEnergyBoughtById[_distributorIndex][_day];\\r\\n    }\\r\\n\\r\\n    modifier powerPlantExists(uint256 _powerplantIndex) {\\r\\n        require(\\r\\n            powerPlants[_powerplantIndex].powerplantAddress != address(0),\\r\\n            \\\"Powerplant does not exist\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier substationExists(uint256 _substationIndex) {\\r\\n        require(\\r\\n            substations[_substationIndex].substationAddress != address(0),\\r\\n            \\\"Substation does not exist\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n    modifier distributorExists(uint256 _distributorIndex) {\\r\\n        require(\\r\\n            distributors[_distributorIndex].distributorAddress != address(0),\\r\\n            \\\"Distributor does not exist\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyPowerPlantOwner() {\\r\\n        require(\\r\\n            powerPlantsAddressToIds[msg.sender] != 0,\\r\\n            \\\"Poweplant does not exist or you are not the owner\\\"\\r\\n        );\\r\\n        require(\\r\\n            powerPlants[powerPlantsAddressToIds[msg.sender]]\\r\\n                .powerplantAddress == msg.sender,\\r\\n            \\\"Only owner allowed\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlySubstationOwner() {\\r\\n        require(\\r\\n            substationsAddressToIds[msg.sender] != 0,\\r\\n            \\\"Substation does not exist or you are not the owner\\\"\\r\\n        );\\r\\n        require(\\r\\n            substations[substationsAddressToIds[msg.sender]]\\r\\n                .substationAddress == msg.sender,\\r\\n            \\\"Only owner allowed\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyDistributorOwner() {\\r\\n        require(\\r\\n            distributorAddressToIds[msg.sender] != 0,\\r\\n            \\\"Distributor does not exist or you are not the owner\\\"\\r\\n        );\\r\\n        require(\\r\\n            distributors[distributorAddressToIds[msg.sender]]\\r\\n                .distributorAddress == msg.sender,\\r\\n            \\\"Only owner allowed\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x9b1531f9bf706e91b68373d5f75f07834f2cb072777be129078fe4cbb88de107\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506146bd806100206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80637c4e15e8116100c3578063ad37ed741161007c578063ad37ed7414610429578063b581aae31461045f578063c3a3ebad1461048f578063d4eac34d146104ab578063f2ff9145146104db578063fa386264146104f75761014d565b80637c4e15e8146103315780637d470670146103615780637e067315146103915780638e2056d1146103c1578063942d33ce146103dd578063987f9b851461040d5761014d565b8063608b74c611610115578063608b74c6146102345780636451164c1461026457806365dbb9861461029957806366c28063146102b55780636ef435d4146102e557806376ba67c2146103015761014d565b80630b636f3a146101525780631b3bec251461018257806330b2edf1146101b257806350b492ba146101e257806359516f1b14610218575b600080fd5b61016c600480360381019061016791906131a1565b610513565b6040516101799190613407565b60405180910390f35b61019c60048036038101906101979190613429565b6107d5565b6040516101a99190613478565b60405180910390f35b6101cc60048036038101906101c791906131a1565b6108ab565b6040516101d99190613551565b60405180910390f35b6101fc60048036038101906101f791906131a1565b610b7a565b60405161020f97969594939291906135cc565b60405180910390f35b610232600480360381019061022d919061377e565b610cec565b005b61024e60048036038101906102499190613429565b610ef0565b60405161025b9190613478565b60405180910390f35b61027e600480360381019061027991906131a1565b610fc6565b60405161029096959493929190613809565b60405180910390f35b6102b360048036038101906102ae919061377e565b611132565b005b6102cf60048036038101906102ca91906138a4565b6112f4565b6040516102dc9190613478565b60405180910390f35b6102ff60048036038101906102fa91906131a1565b61130c565b005b61031b60048036038101906103169190613429565b61164d565b6040516103289190613478565b60405180910390f35b61034b600480360381019061034691906131a1565b611722565b604051610358919061398f565b60405180910390f35b61037b600480360381019061037691906131a1565b6119f1565b6040516103889190613b31565b60405180910390f35b6103ab60048036038101906103a69190613429565b611b6e565b6040516103b89190613478565b60405180910390f35b6103db60048036038101906103d691906131a1565b611c43565b005b6103f760048036038101906103f291906138a4565b61211c565b6040516104049190613478565b60405180910390f35b610427600480360381019061042291906131a1565b612134565b005b610443600480360381019061043e91906131a1565b612610565b6040516104569796959493929190613b53565b60405180910390f35b610479600480360381019061047491906138a4565b612782565b6040516104869190613478565b60405180910390f35b6104a960048036038101906104a491906131a1565b61279a565b005b6104c560048036038101906104c09190613429565b612b34565b6040516104d29190613478565b60405180910390f35b6104f560048036038101906104f091906131a1565b612c0a565b005b610511600480360381019061050c9190613bd0565b612e8c565b005b61051b61304e565b81600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036105c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b790613ca7565b60405180910390fd5b6000808481526020019081526020016000206040518060e00160405290816000820180546105ed90613cf6565b80601f016020809104026020016040519081016040528092919081815260200182805461061990613cf6565b80156106665780601f1061063b57610100808354040283529160200191610666565b820191906000526020600020905b81548152906001019060200180831161064957829003601f168201915b5050505050815260200160018201805461067f90613cf6565b80601f01602080910402602001604051908101604052809291908181526020018280546106ab90613cf6565b80156106f85780601f106106cd576101008083540402835291602001916106f8565b820191906000526020600020905b8154815290600101906020018083116106db57829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382018054806020026020016040519081016040528092919081815260200182805480156107a657602002820191906000526020600020905b815481526020019060010190808311610792575b505050505081526020016004820154815260200160058201548152602001600682015481525050915050919050565b600082600073ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361087d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087490613d73565b60405180910390fd5b6006600085815260200190815260200160002060008481526020019081526020016000205491505092915050565b6108b36130a1565b81600073ffffffffffffffffffffffffffffffffffffffff166007600083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610959576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095090613ddf565b60405180910390fd5b600760008481526020019081526020016000206040518061010001604052908160008201805461098890613cf6565b80601f01602080910402602001604051908101604052809291908181526020018280546109b490613cf6565b8015610a015780601f106109d657610100808354040283529160200191610a01565b820191906000526020600020905b8154815290600101906020018083116109e457829003601f168201915b50505050508152602001600182018054610a1a90613cf6565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4690613cf6565b8015610a935780601f10610a6857610100808354040283529160200191610a93565b820191906000526020600020905b815481529060010190602001808311610a7657829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481526020016005820154815260200160068201805480602002602001604051908101604052809291908181526020018280548015610b5f57602002820191906000526020600020905b815481526020019060010190808311610b4b575b50505050508152602001600782015481525050915050919050565b60046020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054610bc990613cf6565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf590613cf6565b8015610c425780601f10610c1757610100808354040283529160200191610c42565b820191906000526020600020905b815481529060010190602001808311610c2557829003601f168201915b505050505090806003018054610c5790613cf6565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8390613cf6565b8015610cd05780601f10610ca557610100808354040283529160200191610cd0565b820191906000526020600020905b815481529060010190602001808311610cb357829003601f168201915b5050505050908060040154908060060154908060070154905087565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008114610d73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6a90613e4b565b60405180910390fd5b6001600b6000828254610d869190613e9a565b925050819055506000806000600b5481526020019081526020016000209050600b54600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550338160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084816000019081610e3f919061407a565b5083816001019081610e51919061407a565b5082816006018190555082816004018190555060006201518042610e75919061417b565b90508360026000600b5481526020019081526020016000206000838152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600b547f8ed0f10f8db3aa7c553ea6a6b03c61058dfa62a9ad1b85b4e7ab759ff8165dd760405160405180910390a3505050505050565b600082600073ffffffffffffffffffffffffffffffffffffffff166007600083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610f98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8f90613ddf565b60405180910390fd5b600a600085815260200190815260200160002060008481526020019081526020016000205491505092915050565b6000602052806000526040600020600091509050806000018054610fe990613cf6565b80601f016020809104026020016040519081016040528092919081815260200182805461101590613cf6565b80156110625780601f1061103757610100808354040283529160200191611062565b820191906000526020600020905b81548152906001019060200180831161104557829003601f168201915b50505050509080600101805461107790613cf6565b80601f01602080910402602001604051908101604052809291908181526020018280546110a390613cf6565b80156110f05780601f106110c5576101008083540402835291602001916110f0565b820191906000526020600020905b8154815290600101906020018083116110d357829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050154908060060154905086565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146111b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ab9061421e565b60405180910390fd5b6001600c60008282546111c79190613e9a565b92505081905550600060046000600c5481526020019081526020016000209050600c54600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508381600201908161123e919061407a565b5082816003019081611250919061407a565b50338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508181600401819055503373ffffffffffffffffffffffffffffffffffffffff16600c547fb4ffce99b074ca0b19d0fb8efa8523647db979b167cdd0bc4cbbd91f91e14541846040516112e69190613478565b60405180910390a350505050565b60016020528060005260406000206000915090505481565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540361138e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611385906142b0565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1660046000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611471576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114689061431c565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600460008381526020019081526020016000209050600060076000836000015481526020019081526020016000209050838160070154101561152e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611525906143ae565b60405180910390fd5b8381600701600082825461154291906143ce565b925050819055508382600701600082825461155d9190613e9a565b9250508190555060006201518042611575919061417b565b90508460066000868152602001908152602001600020600083815260200190815260200160002060008282546115ab9190613e9a565b92505081905550848360040160008282546115c69190613e9a565b9250508190555084600a600085600001548152602001908152602001600020600083815260200190815260200160002060008282546116059190613e9a565b92505081905550837f73adff80ab623465da18a83132be6ce95cb48b93c74c4a33915d3abdc75d5092868360405161163e929190614402565b60405180910390a25050505050565b600082600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036116f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116eb90613ca7565b60405180910390fd5b6003600085815260200190815260200160002060008481526020019081526020016000205491505092915050565b61172a6130fc565b81600073ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036117d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117c790613d73565b60405180910390fd5b6004600084815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461185f90613cf6565b80601f016020809104026020016040519081016040528092919081815260200182805461188b90613cf6565b80156118d85780601f106118ad576101008083540402835291602001916118d8565b820191906000526020600020905b8154815290600101906020018083116118bb57829003601f168201915b505050505081526020016003820180546118f190613cf6565b80601f016020809104026020016040519081016040528092919081815260200182805461191d90613cf6565b801561196a5780601f1061193f5761010080835404028352916020019161196a565b820191906000526020600020905b81548152906001019060200180831161194d57829003601f168201915b5050505050815260200160048201548152602001600582018054806020026020016040519081016040528092919081815260200182805480156119cc57602002820191906000526020600020905b8154815260200190600101908083116119b8575b5050505050815260200160068201548152602001600782015481525050915050919050565b606081600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611a98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a8f90613ca7565b60405180910390fd5b6000611aa384610513565b6060015190506000815167ffffffffffffffff811115611ac657611ac5613653565b5b604051908082528060200260200182016040528015611aff57816020015b611aec6130a1565b815260200190600190039081611ae45790505b50905060005b8251811015611b6257611b31838281518110611b2457611b2361442b565b5b60200260200101516108ab565b828281518110611b4457611b4361442b565b5b60200260200101819052508080611b5a9061445a565b915050611b05565b50809350505050919050565b600082600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c0c90613ca7565b60405180910390fd5b6002600085815260200190815260200160002060008481526020019081526020016000205491505092915050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403611cc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cbc90614514565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1660076000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611da8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d9f9061431c565b60405180910390fd5b80600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611e4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e4490613ca7565b60405180910390fd5b600060076000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481526020019081526020016000209050600081600201549050600082600201541461201e576000806000846002015481526020019081526020016000209050600080600090505b8260030180549050811015611f6a57600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836003018281548110611f3f57611f3e61442b565b5b906000526020600020015403611f5757809150611f6a565b8080611f629061445a565b915050611eda565b5060008190505b60018360030180549050611f8591906143ce565b811015611ff05782600301600182611f9d9190613e9a565b81548110611fae57611fad61442b565b5b9060005260206000200154836003018281548110611fcf57611fce61442b565b5b90600052602060002001819055508080611fe89061445a565b915050611f71565b508160030180548061200557612004614534565b5b6001900381819060005260206000200160009055905550505b8382600201819055506000806000868152602001908152602001600020905080600301600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490806001815401808255809150506001900390600052602060002001600090919091909150558185600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020547f1153c1b626cc03d95ce45f3c02f68a82e0e19c75e1ef2fa7ef8b9fd0cb6b7e7e60405160405180910390a45050505050565b60086020528060005260406000206000915090505481565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036121b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121ad906142b0565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1660046000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612299576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122909061431c565b60405180910390fd5b80600073ffffffffffffffffffffffffffffffffffffffff166007600083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361233f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161233690613ddf565b60405180910390fd5b600060046000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481526020019081526020016000209050600081600001549050600082600001541461251157600060076000846000015481526020019081526020016000209050600080600090505b826006018054905081101561245d57600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548360060182815481106124325761243161442b565b5b90600052602060002001540361244a5780915061245d565b80806124559061445a565b9150506123cd565b5060008190505b6001836006018054905061247891906143ce565b8110156124e357826006016001826124909190613e9a565b815481106124a1576124a061442b565b5b90600052602060002001548360060182815481106124c2576124c161442b565b5b906000526020600020018190555080806124db9061445a565b915050612464565b50816006018054806124f8576124f7614534565b5b6001900381819060005260206000200160009055905550505b838260000181905550600060076000868152602001908152602001600020905080600601600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490806001815401808255809150506001900390600052602060002001600090919091909150558185600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020547f73512025db3bffe4e4a3db857c38406e5b88161e3d0c961c4d3a559da1f5b7a660405160405180910390a45050505050565b600760205280600052604060002060009150905080600001805461263390613cf6565b80601f016020809104026020016040519081016040528092919081815260200182805461265f90613cf6565b80156126ac5780601f10612681576101008083540402835291602001916126ac565b820191906000526020600020905b81548152906001019060200180831161268f57829003601f168201915b5050505050908060010180546126c190613cf6565b80601f01602080910402602001604051908101604052809291908181526020018280546126ed90613cf6565b801561273a5780601f1061270f5761010080835404028352916020019161273a565b820191906000526020600020905b81548152906001019060200180831161271d57829003601f168201915b5050505050908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050154908060070154905087565b60056020528060005260406000206000915090505481565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540361281c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161281390614514565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1660076000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146128ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128f69061431c565b60405180910390fd5b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600760008381526020019081526020016000209050600080600083600201548152602001908152602001600020905083816006015410156129bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129b2906143ae565b60405180910390fd5b838160060160008282546129cf91906143ce565b92505081905550838260040160008282546129ea9190613e9a565b9250508190555060006201518042612a02919061417b565b9050846009600086815260200190815260200160002060008381526020019081526020016000206000828254612a389190613e9a565b9250508190555084836007016000828254612a539190613e9a565b9250508190555084600360008560020154815260200190815260200160002060008381526020019081526020016000206000828254612a929190613e9a565b9250508190555084826005016000828254612aad9190613e9a565b92505081905550600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020547fd751c239d69943b20a7a994414c35ad1948382a57234874e2df47560fe29df138683604051612b25929190614402565b60405180910390a25050505050565b600082600073ffffffffffffffffffffffffffffffffffffffff166007600083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603612bdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bd390613ddf565b60405180910390fd5b6009600085815260200190815260200160002060008481526020019081526020016000205491505092915050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403612c8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c83906145d5565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612d6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d659061431c565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000806000838152602001908152602001600020905082816006016000828254612ddc9190613e9a565b9250508190555060006201518042612df4919061417b565b9050836002600085815260200190815260200160002060008381526020019081526020016000206000828254612e2a9190613e9a565b9250508190555083826004016000828254612e459190613e9a565b92505081905550827ff9996ab4e5c178ed609618b0b9ab2a55506a5816b5cbb5a0f6a117e1f85e18ce8583604051612e7e929190614402565b60405180910390a250505050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414612f0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f0590614667565b60405180910390fd5b6001600d6000828254612f219190613e9a565b92505081905550600060076000600d5481526020019081526020016000209050600d54600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082816000019081612f98919061407a565b5081816001019081612faa919061407a565b50338160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508381600701819055503373ffffffffffffffffffffffffffffffffffffffff16600d547f87811c48455fe14a033cafe58bdfac97fe57f6694ebd5822e7fe91fbabc058a0866040516130409190613478565b60405180910390a350505050565b6040518060e001604052806060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016000815260200160008152602001600081525090565b604051806101000160405280606081526020016060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160608152602001600081525090565b60405180610100016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081526020016060815260200160008152602001600081525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61317e8161316b565b811461318957600080fd5b50565b60008135905061319b81613175565b92915050565b6000602082840312156131b7576131b6613161565b5b60006131c58482850161318c565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156132085780820151818401526020810190506131ed565b60008484015250505050565b6000601f19601f8301169050919050565b6000613230826131ce565b61323a81856131d9565b935061324a8185602086016131ea565b61325381613214565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006132898261325e565b9050919050565b6132998161327e565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6132d48161316b565b82525050565b60006132e683836132cb565b60208301905092915050565b6000602082019050919050565b600061330a8261329f565b61331481856132aa565b935061331f836132bb565b8060005b8381101561335057815161333788826132da565b9750613342836132f2565b925050600181019050613323565b5085935050505092915050565b600060e083016000830151848203600086015261337a8282613225565b915050602083015184820360208601526133948282613225565b91505060408301516133a96040860182613290565b50606083015184820360608601526133c182826132ff565b91505060808301516133d660808601826132cb565b5060a08301516133e960a08601826132cb565b5060c08301516133fc60c08601826132cb565b508091505092915050565b60006020820190508181036000830152613421818461335d565b905092915050565b600080604083850312156134405761343f613161565b5b600061344e8582860161318c565b925050602061345f8582860161318c565b9150509250929050565b6134728161316b565b82525050565b600060208201905061348d6000830184613469565b92915050565b60006101008301600083015184820360008601526134b18282613225565b915050602083015184820360208601526134cb8282613225565b91505060408301516134e060408601826132cb565b5060608301516134f36060860182613290565b50608083015161350660808601826132cb565b5060a083015161351960a08601826132cb565b5060c083015184820360c086015261353182826132ff565b91505060e083015161354660e08601826132cb565b508091505092915050565b6000602082019050818103600083015261356b8184613493565b905092915050565b61357c8161327e565b82525050565b600082825260208201905092915050565b600061359e826131ce565b6135a88185613582565b93506135b88185602086016131ea565b6135c181613214565b840191505092915050565b600060e0820190506135e1600083018a613469565b6135ee6020830189613573565b81810360408301526136008188613593565b905081810360608301526136148187613593565b90506136236080830186613469565b61363060a0830185613469565b61363d60c0830184613469565b98975050505050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61368b82613214565b810181811067ffffffffffffffff821117156136aa576136a9613653565b5b80604052505050565b60006136bd613157565b90506136c98282613682565b919050565b600067ffffffffffffffff8211156136e9576136e8613653565b5b6136f282613214565b9050602081019050919050565b82818337600083830152505050565b600061372161371c846136ce565b6136b3565b90508281526020810184848401111561373d5761373c61364e565b5b6137488482856136ff565b509392505050565b600082601f83011261376557613764613649565b5b813561377584826020860161370e565b91505092915050565b60008060006060848603121561379757613796613161565b5b600084013567ffffffffffffffff8111156137b5576137b4613166565b5b6137c186828701613750565b935050602084013567ffffffffffffffff8111156137e2576137e1613166565b5b6137ee86828701613750565b92505060406137ff8682870161318c565b9150509250925092565b600060c08201905081810360008301526138238189613593565b905081810360208301526138378188613593565b90506138466040830187613573565b6138536060830186613469565b6138606080830185613469565b61386d60a0830184613469565b979650505050505050565b6138818161327e565b811461388c57600080fd5b50565b60008135905061389e81613878565b92915050565b6000602082840312156138ba576138b9613161565b5b60006138c88482850161388f565b91505092915050565b6000610100830160008301516138ea60008601826132cb565b5060208301516138fd6020860182613290565b50604083015184820360408601526139158282613225565b9150506060830151848203606086015261392f8282613225565b915050608083015161394460808601826132cb565b5060a083015184820360a086015261395c82826132ff565b91505060c083015161397160c08601826132cb565b5060e083015161398460e08601826132cb565b508091505092915050565b600060208201905081810360008301526139a981846138d1565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006101008301600083015184820360008601526139fb8282613225565b91505060208301518482036020860152613a158282613225565b9150506040830151613a2a60408601826132cb565b506060830151613a3d6060860182613290565b506080830151613a5060808601826132cb565b5060a0830151613a6360a08601826132cb565b5060c083015184820360c0860152613a7b82826132ff565b91505060e0830151613a9060e08601826132cb565b508091505092915050565b6000613aa783836139dd565b905092915050565b6000602082019050919050565b6000613ac7826139b1565b613ad181856139bc565b935083602082028501613ae3856139cd565b8060005b85811015613b1f5784840389528151613b008582613a9b565b9450613b0b83613aaf565b925060208a01995050600181019050613ae7565b50829750879550505050505092915050565b60006020820190508181036000830152613b4b8184613abc565b905092915050565b600060e0820190508181036000830152613b6d818a613593565b90508181036020830152613b818189613593565b9050613b906040830188613469565b613b9d6060830187613573565b613baa6080830186613469565b613bb760a0830185613469565b613bc460c0830184613469565b98975050505050505050565b600080600060608486031215613be957613be8613161565b5b6000613bf78682870161318c565b935050602084013567ffffffffffffffff811115613c1857613c17613166565b5b613c2486828701613750565b925050604084013567ffffffffffffffff811115613c4557613c44613166565b5b613c5186828701613750565b9150509250925092565b7f506f776572706c616e7420646f6573206e6f7420657869737400000000000000600082015250565b6000613c91601983613582565b9150613c9c82613c5b565b602082019050919050565b60006020820190508181036000830152613cc081613c84565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613d0e57607f821691505b602082108103613d2157613d20613cc7565b5b50919050565b7f4469737472696275746f7220646f6573206e6f74206578697374000000000000600082015250565b6000613d5d601a83613582565b9150613d6882613d27565b602082019050919050565b60006020820190508181036000830152613d8c81613d50565b9050919050565b7f53756273746174696f6e20646f6573206e6f7420657869737400000000000000600082015250565b6000613dc9601983613582565b9150613dd482613d93565b602082019050919050565b60006020820190508181036000830152613df881613dbc565b9050919050565b7f506f77657220706c616e7420616c726561647920657869737473000000000000600082015250565b6000613e35601a83613582565b9150613e4082613dff565b602082019050919050565b60006020820190508181036000830152613e6481613e28565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613ea58261316b565b9150613eb08361316b565b9250828201905080821115613ec857613ec7613e6b565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302613f307fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613ef3565b613f3a8683613ef3565b95508019841693508086168417925050509392505050565b6000819050919050565b6000613f77613f72613f6d8461316b565b613f52565b61316b565b9050919050565b6000819050919050565b613f9183613f5c565b613fa5613f9d82613f7e565b848454613f00565b825550505050565b600090565b613fba613fad565b613fc5818484613f88565b505050565b5b81811015613fe957613fde600082613fb2565b600181019050613fcb565b5050565b601f82111561402e57613fff81613ece565b61400884613ee3565b81016020851015614017578190505b61402b61402385613ee3565b830182613fca565b50505b505050565b600082821c905092915050565b600061405160001984600802614033565b1980831691505092915050565b600061406a8383614040565b9150826002028217905092915050565b614083826131ce565b67ffffffffffffffff81111561409c5761409b613653565b5b6140a68254613cf6565b6140b1828285613fed565b600060209050601f8311600181146140e457600084156140d2578287015190505b6140dc858261405e565b865550614144565b601f1984166140f286613ece565b60005b8281101561411a578489015182556001820191506020850194506020810190506140f5565b868310156141375784890151614133601f891682614040565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006141868261316b565b91506141918361316b565b9250826141a1576141a061414c565b5b828204905092915050565b7f4469737472696275746f7220616c72656164792065786973747320776974682060008201527f7468652061646472657373000000000000000000000000000000000000000000602082015250565b6000614208602b83613582565b9150614213826141ac565b604082019050919050565b60006020820190508181036000830152614237816141fb565b9050919050565b7f4469737472696275746f7220646f6573206e6f74206578697374206f7220796f60008201527f7520617265206e6f7420746865206f776e657200000000000000000000000000602082015250565b600061429a603383613582565b91506142a58261423e565b604082019050919050565b600060208201905081810360008301526142c98161428d565b9050919050565b7f4f6e6c79206f776e657220616c6c6f7765640000000000000000000000000000600082015250565b6000614306601283613582565b9150614311826142d0565b602082019050919050565b60006020820190508181036000830152614335816142f9565b9050919050565b7f496e73756666696369656e7420656e6572677920617661696c61626c6520746f60008201527f2062757900000000000000000000000000000000000000000000000000000000602082015250565b6000614398602483613582565b91506143a38261433c565b604082019050919050565b600060208201905081810360008301526143c78161438b565b9050919050565b60006143d98261316b565b91506143e48361316b565b92508282039050818111156143fc576143fb613e6b565b5b92915050565b60006040820190506144176000830185613469565b6144246020830184613469565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006144658261316b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361449757614496613e6b565b5b600182019050919050565b7f53756273746174696f6e20646f6573206e6f74206578697374206f7220796f7560008201527f20617265206e6f7420746865206f776e65720000000000000000000000000000602082015250565b60006144fe603283613582565b9150614509826144a2565b604082019050919050565b6000602082019050818103600083015261452d816144f1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f506f7765706c616e7420646f6573206e6f74206578697374206f7220796f752060008201527f617265206e6f7420746865206f776e6572000000000000000000000000000000602082015250565b60006145bf603183613582565b91506145ca82614563565b604082019050919050565b600060208201905081810360008301526145ee816145b2565b9050919050565b7f53756273746174696f6e20616c7265616479206578697374732077697468207460008201527f68652063757272656e7420616464726573730000000000000000000000000000602082015250565b6000614651603283613582565b915061465c826145f5565b604082019050919050565b6000602082019050818103600083015261468081614644565b905091905056fea26469706673582212201ea40a2dbe068bae3828dfb4d80d2bdcf5a9ea1eae1bbfa597987f6f90e1b61664736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c80637c4e15e8116100c3578063ad37ed741161007c578063ad37ed7414610429578063b581aae31461045f578063c3a3ebad1461048f578063d4eac34d146104ab578063f2ff9145146104db578063fa386264146104f75761014d565b80637c4e15e8146103315780637d470670146103615780637e067315146103915780638e2056d1146103c1578063942d33ce146103dd578063987f9b851461040d5761014d565b8063608b74c611610115578063608b74c6146102345780636451164c1461026457806365dbb9861461029957806366c28063146102b55780636ef435d4146102e557806376ba67c2146103015761014d565b80630b636f3a146101525780631b3bec251461018257806330b2edf1146101b257806350b492ba146101e257806359516f1b14610218575b600080fd5b61016c600480360381019061016791906131a1565b610513565b6040516101799190613407565b60405180910390f35b61019c60048036038101906101979190613429565b6107d5565b6040516101a99190613478565b60405180910390f35b6101cc60048036038101906101c791906131a1565b6108ab565b6040516101d99190613551565b60405180910390f35b6101fc60048036038101906101f791906131a1565b610b7a565b60405161020f97969594939291906135cc565b60405180910390f35b610232600480360381019061022d919061377e565b610cec565b005b61024e60048036038101906102499190613429565b610ef0565b60405161025b9190613478565b60405180910390f35b61027e600480360381019061027991906131a1565b610fc6565b60405161029096959493929190613809565b60405180910390f35b6102b360048036038101906102ae919061377e565b611132565b005b6102cf60048036038101906102ca91906138a4565b6112f4565b6040516102dc9190613478565b60405180910390f35b6102ff60048036038101906102fa91906131a1565b61130c565b005b61031b60048036038101906103169190613429565b61164d565b6040516103289190613478565b60405180910390f35b61034b600480360381019061034691906131a1565b611722565b604051610358919061398f565b60405180910390f35b61037b600480360381019061037691906131a1565b6119f1565b6040516103889190613b31565b60405180910390f35b6103ab60048036038101906103a69190613429565b611b6e565b6040516103b89190613478565b60405180910390f35b6103db60048036038101906103d691906131a1565b611c43565b005b6103f760048036038101906103f291906138a4565b61211c565b6040516104049190613478565b60405180910390f35b610427600480360381019061042291906131a1565b612134565b005b610443600480360381019061043e91906131a1565b612610565b6040516104569796959493929190613b53565b60405180910390f35b610479600480360381019061047491906138a4565b612782565b6040516104869190613478565b60405180910390f35b6104a960048036038101906104a491906131a1565b61279a565b005b6104c560048036038101906104c09190613429565b612b34565b6040516104d29190613478565b60405180910390f35b6104f560048036038101906104f091906131a1565b612c0a565b005b610511600480360381019061050c9190613bd0565b612e8c565b005b61051b61304e565b81600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036105c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b790613ca7565b60405180910390fd5b6000808481526020019081526020016000206040518060e00160405290816000820180546105ed90613cf6565b80601f016020809104026020016040519081016040528092919081815260200182805461061990613cf6565b80156106665780601f1061063b57610100808354040283529160200191610666565b820191906000526020600020905b81548152906001019060200180831161064957829003601f168201915b5050505050815260200160018201805461067f90613cf6565b80601f01602080910402602001604051908101604052809291908181526020018280546106ab90613cf6565b80156106f85780601f106106cd576101008083540402835291602001916106f8565b820191906000526020600020905b8154815290600101906020018083116106db57829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382018054806020026020016040519081016040528092919081815260200182805480156107a657602002820191906000526020600020905b815481526020019060010190808311610792575b505050505081526020016004820154815260200160058201548152602001600682015481525050915050919050565b600082600073ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361087d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087490613d73565b60405180910390fd5b6006600085815260200190815260200160002060008481526020019081526020016000205491505092915050565b6108b36130a1565b81600073ffffffffffffffffffffffffffffffffffffffff166007600083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610959576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095090613ddf565b60405180910390fd5b600760008481526020019081526020016000206040518061010001604052908160008201805461098890613cf6565b80601f01602080910402602001604051908101604052809291908181526020018280546109b490613cf6565b8015610a015780601f106109d657610100808354040283529160200191610a01565b820191906000526020600020905b8154815290600101906020018083116109e457829003601f168201915b50505050508152602001600182018054610a1a90613cf6565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4690613cf6565b8015610a935780601f10610a6857610100808354040283529160200191610a93565b820191906000526020600020905b815481529060010190602001808311610a7657829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481526020016005820154815260200160068201805480602002602001604051908101604052809291908181526020018280548015610b5f57602002820191906000526020600020905b815481526020019060010190808311610b4b575b50505050508152602001600782015481525050915050919050565b60046020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054610bc990613cf6565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf590613cf6565b8015610c425780601f10610c1757610100808354040283529160200191610c42565b820191906000526020600020905b815481529060010190602001808311610c2557829003601f168201915b505050505090806003018054610c5790613cf6565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8390613cf6565b8015610cd05780601f10610ca557610100808354040283529160200191610cd0565b820191906000526020600020905b815481529060010190602001808311610cb357829003601f168201915b5050505050908060040154908060060154908060070154905087565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008114610d73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6a90613e4b565b60405180910390fd5b6001600b6000828254610d869190613e9a565b925050819055506000806000600b5481526020019081526020016000209050600b54600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550338160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084816000019081610e3f919061407a565b5083816001019081610e51919061407a565b5082816006018190555082816004018190555060006201518042610e75919061417b565b90508360026000600b5481526020019081526020016000206000838152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600b547f8ed0f10f8db3aa7c553ea6a6b03c61058dfa62a9ad1b85b4e7ab759ff8165dd760405160405180910390a3505050505050565b600082600073ffffffffffffffffffffffffffffffffffffffff166007600083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610f98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8f90613ddf565b60405180910390fd5b600a600085815260200190815260200160002060008481526020019081526020016000205491505092915050565b6000602052806000526040600020600091509050806000018054610fe990613cf6565b80601f016020809104026020016040519081016040528092919081815260200182805461101590613cf6565b80156110625780601f1061103757610100808354040283529160200191611062565b820191906000526020600020905b81548152906001019060200180831161104557829003601f168201915b50505050509080600101805461107790613cf6565b80601f01602080910402602001604051908101604052809291908181526020018280546110a390613cf6565b80156110f05780601f106110c5576101008083540402835291602001916110f0565b820191906000526020600020905b8154815290600101906020018083116110d357829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050154908060060154905086565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146111b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ab9061421e565b60405180910390fd5b6001600c60008282546111c79190613e9a565b92505081905550600060046000600c5481526020019081526020016000209050600c54600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508381600201908161123e919061407a565b5082816003019081611250919061407a565b50338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508181600401819055503373ffffffffffffffffffffffffffffffffffffffff16600c547fb4ffce99b074ca0b19d0fb8efa8523647db979b167cdd0bc4cbbd91f91e14541846040516112e69190613478565b60405180910390a350505050565b60016020528060005260406000206000915090505481565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540361138e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611385906142b0565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1660046000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611471576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114689061431c565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600460008381526020019081526020016000209050600060076000836000015481526020019081526020016000209050838160070154101561152e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611525906143ae565b60405180910390fd5b8381600701600082825461154291906143ce565b925050819055508382600701600082825461155d9190613e9a565b9250508190555060006201518042611575919061417b565b90508460066000868152602001908152602001600020600083815260200190815260200160002060008282546115ab9190613e9a565b92505081905550848360040160008282546115c69190613e9a565b9250508190555084600a600085600001548152602001908152602001600020600083815260200190815260200160002060008282546116059190613e9a565b92505081905550837f73adff80ab623465da18a83132be6ce95cb48b93c74c4a33915d3abdc75d5092868360405161163e929190614402565b60405180910390a25050505050565b600082600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036116f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116eb90613ca7565b60405180910390fd5b6003600085815260200190815260200160002060008481526020019081526020016000205491505092915050565b61172a6130fc565b81600073ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036117d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117c790613d73565b60405180910390fd5b6004600084815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461185f90613cf6565b80601f016020809104026020016040519081016040528092919081815260200182805461188b90613cf6565b80156118d85780601f106118ad576101008083540402835291602001916118d8565b820191906000526020600020905b8154815290600101906020018083116118bb57829003601f168201915b505050505081526020016003820180546118f190613cf6565b80601f016020809104026020016040519081016040528092919081815260200182805461191d90613cf6565b801561196a5780601f1061193f5761010080835404028352916020019161196a565b820191906000526020600020905b81548152906001019060200180831161194d57829003601f168201915b5050505050815260200160048201548152602001600582018054806020026020016040519081016040528092919081815260200182805480156119cc57602002820191906000526020600020905b8154815260200190600101908083116119b8575b5050505050815260200160068201548152602001600782015481525050915050919050565b606081600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611a98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a8f90613ca7565b60405180910390fd5b6000611aa384610513565b6060015190506000815167ffffffffffffffff811115611ac657611ac5613653565b5b604051908082528060200260200182016040528015611aff57816020015b611aec6130a1565b815260200190600190039081611ae45790505b50905060005b8251811015611b6257611b31838281518110611b2457611b2361442b565b5b60200260200101516108ab565b828281518110611b4457611b4361442b565b5b60200260200101819052508080611b5a9061445a565b915050611b05565b50809350505050919050565b600082600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c0c90613ca7565b60405180910390fd5b6002600085815260200190815260200160002060008481526020019081526020016000205491505092915050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403611cc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cbc90614514565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1660076000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611da8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d9f9061431c565b60405180910390fd5b80600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611e4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e4490613ca7565b60405180910390fd5b600060076000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481526020019081526020016000209050600081600201549050600082600201541461201e576000806000846002015481526020019081526020016000209050600080600090505b8260030180549050811015611f6a57600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836003018281548110611f3f57611f3e61442b565b5b906000526020600020015403611f5757809150611f6a565b8080611f629061445a565b915050611eda565b5060008190505b60018360030180549050611f8591906143ce565b811015611ff05782600301600182611f9d9190613e9a565b81548110611fae57611fad61442b565b5b9060005260206000200154836003018281548110611fcf57611fce61442b565b5b90600052602060002001819055508080611fe89061445a565b915050611f71565b508160030180548061200557612004614534565b5b6001900381819060005260206000200160009055905550505b8382600201819055506000806000868152602001908152602001600020905080600301600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490806001815401808255809150506001900390600052602060002001600090919091909150558185600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020547f1153c1b626cc03d95ce45f3c02f68a82e0e19c75e1ef2fa7ef8b9fd0cb6b7e7e60405160405180910390a45050505050565b60086020528060005260406000206000915090505481565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036121b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121ad906142b0565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1660046000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612299576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122909061431c565b60405180910390fd5b80600073ffffffffffffffffffffffffffffffffffffffff166007600083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361233f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161233690613ddf565b60405180910390fd5b600060046000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481526020019081526020016000209050600081600001549050600082600001541461251157600060076000846000015481526020019081526020016000209050600080600090505b826006018054905081101561245d57600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548360060182815481106124325761243161442b565b5b90600052602060002001540361244a5780915061245d565b80806124559061445a565b9150506123cd565b5060008190505b6001836006018054905061247891906143ce565b8110156124e357826006016001826124909190613e9a565b815481106124a1576124a061442b565b5b90600052602060002001548360060182815481106124c2576124c161442b565b5b906000526020600020018190555080806124db9061445a565b915050612464565b50816006018054806124f8576124f7614534565b5b6001900381819060005260206000200160009055905550505b838260000181905550600060076000868152602001908152602001600020905080600601600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490806001815401808255809150506001900390600052602060002001600090919091909150558185600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020547f73512025db3bffe4e4a3db857c38406e5b88161e3d0c961c4d3a559da1f5b7a660405160405180910390a45050505050565b600760205280600052604060002060009150905080600001805461263390613cf6565b80601f016020809104026020016040519081016040528092919081815260200182805461265f90613cf6565b80156126ac5780601f10612681576101008083540402835291602001916126ac565b820191906000526020600020905b81548152906001019060200180831161268f57829003601f168201915b5050505050908060010180546126c190613cf6565b80601f01602080910402602001604051908101604052809291908181526020018280546126ed90613cf6565b801561273a5780601f1061270f5761010080835404028352916020019161273a565b820191906000526020600020905b81548152906001019060200180831161271d57829003601f168201915b5050505050908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050154908060070154905087565b60056020528060005260406000206000915090505481565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540361281c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161281390614514565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1660076000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146128ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128f69061431c565b60405180910390fd5b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600760008381526020019081526020016000209050600080600083600201548152602001908152602001600020905083816006015410156129bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129b2906143ae565b60405180910390fd5b838160060160008282546129cf91906143ce565b92505081905550838260040160008282546129ea9190613e9a565b9250508190555060006201518042612a02919061417b565b9050846009600086815260200190815260200160002060008381526020019081526020016000206000828254612a389190613e9a565b9250508190555084836007016000828254612a539190613e9a565b9250508190555084600360008560020154815260200190815260200160002060008381526020019081526020016000206000828254612a929190613e9a565b9250508190555084826005016000828254612aad9190613e9a565b92505081905550600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020547fd751c239d69943b20a7a994414c35ad1948382a57234874e2df47560fe29df138683604051612b25929190614402565b60405180910390a25050505050565b600082600073ffffffffffffffffffffffffffffffffffffffff166007600083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603612bdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bd390613ddf565b60405180910390fd5b6009600085815260200190815260200160002060008481526020019081526020016000205491505092915050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403612c8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c83906145d5565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612d6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d659061431c565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000806000838152602001908152602001600020905082816006016000828254612ddc9190613e9a565b9250508190555060006201518042612df4919061417b565b9050836002600085815260200190815260200160002060008381526020019081526020016000206000828254612e2a9190613e9a565b9250508190555083826004016000828254612e459190613e9a565b92505081905550827ff9996ab4e5c178ed609618b0b9ab2a55506a5816b5cbb5a0f6a117e1f85e18ce8583604051612e7e929190614402565b60405180910390a250505050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414612f0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f0590614667565b60405180910390fd5b6001600d6000828254612f219190613e9a565b92505081905550600060076000600d5481526020019081526020016000209050600d54600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082816000019081612f98919061407a565b5081816001019081612faa919061407a565b50338160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508381600701819055503373ffffffffffffffffffffffffffffffffffffffff16600d547f87811c48455fe14a033cafe58bdfac97fe57f6694ebd5822e7fe91fbabc058a0866040516130409190613478565b60405180910390a350505050565b6040518060e001604052806060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016000815260200160008152602001600081525090565b604051806101000160405280606081526020016060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160608152602001600081525090565b60405180610100016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081526020016060815260200160008152602001600081525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61317e8161316b565b811461318957600080fd5b50565b60008135905061319b81613175565b92915050565b6000602082840312156131b7576131b6613161565b5b60006131c58482850161318c565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156132085780820151818401526020810190506131ed565b60008484015250505050565b6000601f19601f8301169050919050565b6000613230826131ce565b61323a81856131d9565b935061324a8185602086016131ea565b61325381613214565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006132898261325e565b9050919050565b6132998161327e565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6132d48161316b565b82525050565b60006132e683836132cb565b60208301905092915050565b6000602082019050919050565b600061330a8261329f565b61331481856132aa565b935061331f836132bb565b8060005b8381101561335057815161333788826132da565b9750613342836132f2565b925050600181019050613323565b5085935050505092915050565b600060e083016000830151848203600086015261337a8282613225565b915050602083015184820360208601526133948282613225565b91505060408301516133a96040860182613290565b50606083015184820360608601526133c182826132ff565b91505060808301516133d660808601826132cb565b5060a08301516133e960a08601826132cb565b5060c08301516133fc60c08601826132cb565b508091505092915050565b60006020820190508181036000830152613421818461335d565b905092915050565b600080604083850312156134405761343f613161565b5b600061344e8582860161318c565b925050602061345f8582860161318c565b9150509250929050565b6134728161316b565b82525050565b600060208201905061348d6000830184613469565b92915050565b60006101008301600083015184820360008601526134b18282613225565b915050602083015184820360208601526134cb8282613225565b91505060408301516134e060408601826132cb565b5060608301516134f36060860182613290565b50608083015161350660808601826132cb565b5060a083015161351960a08601826132cb565b5060c083015184820360c086015261353182826132ff565b91505060e083015161354660e08601826132cb565b508091505092915050565b6000602082019050818103600083015261356b8184613493565b905092915050565b61357c8161327e565b82525050565b600082825260208201905092915050565b600061359e826131ce565b6135a88185613582565b93506135b88185602086016131ea565b6135c181613214565b840191505092915050565b600060e0820190506135e1600083018a613469565b6135ee6020830189613573565b81810360408301526136008188613593565b905081810360608301526136148187613593565b90506136236080830186613469565b61363060a0830185613469565b61363d60c0830184613469565b98975050505050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61368b82613214565b810181811067ffffffffffffffff821117156136aa576136a9613653565b5b80604052505050565b60006136bd613157565b90506136c98282613682565b919050565b600067ffffffffffffffff8211156136e9576136e8613653565b5b6136f282613214565b9050602081019050919050565b82818337600083830152505050565b600061372161371c846136ce565b6136b3565b90508281526020810184848401111561373d5761373c61364e565b5b6137488482856136ff565b509392505050565b600082601f83011261376557613764613649565b5b813561377584826020860161370e565b91505092915050565b60008060006060848603121561379757613796613161565b5b600084013567ffffffffffffffff8111156137b5576137b4613166565b5b6137c186828701613750565b935050602084013567ffffffffffffffff8111156137e2576137e1613166565b5b6137ee86828701613750565b92505060406137ff8682870161318c565b9150509250925092565b600060c08201905081810360008301526138238189613593565b905081810360208301526138378188613593565b90506138466040830187613573565b6138536060830186613469565b6138606080830185613469565b61386d60a0830184613469565b979650505050505050565b6138818161327e565b811461388c57600080fd5b50565b60008135905061389e81613878565b92915050565b6000602082840312156138ba576138b9613161565b5b60006138c88482850161388f565b91505092915050565b6000610100830160008301516138ea60008601826132cb565b5060208301516138fd6020860182613290565b50604083015184820360408601526139158282613225565b9150506060830151848203606086015261392f8282613225565b915050608083015161394460808601826132cb565b5060a083015184820360a086015261395c82826132ff565b91505060c083015161397160c08601826132cb565b5060e083015161398460e08601826132cb565b508091505092915050565b600060208201905081810360008301526139a981846138d1565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006101008301600083015184820360008601526139fb8282613225565b91505060208301518482036020860152613a158282613225565b9150506040830151613a2a60408601826132cb565b506060830151613a3d6060860182613290565b506080830151613a5060808601826132cb565b5060a0830151613a6360a08601826132cb565b5060c083015184820360c0860152613a7b82826132ff565b91505060e0830151613a9060e08601826132cb565b508091505092915050565b6000613aa783836139dd565b905092915050565b6000602082019050919050565b6000613ac7826139b1565b613ad181856139bc565b935083602082028501613ae3856139cd565b8060005b85811015613b1f5784840389528151613b008582613a9b565b9450613b0b83613aaf565b925060208a01995050600181019050613ae7565b50829750879550505050505092915050565b60006020820190508181036000830152613b4b8184613abc565b905092915050565b600060e0820190508181036000830152613b6d818a613593565b90508181036020830152613b818189613593565b9050613b906040830188613469565b613b9d6060830187613573565b613baa6080830186613469565b613bb760a0830185613469565b613bc460c0830184613469565b98975050505050505050565b600080600060608486031215613be957613be8613161565b5b6000613bf78682870161318c565b935050602084013567ffffffffffffffff811115613c1857613c17613166565b5b613c2486828701613750565b925050604084013567ffffffffffffffff811115613c4557613c44613166565b5b613c5186828701613750565b9150509250925092565b7f506f776572706c616e7420646f6573206e6f7420657869737400000000000000600082015250565b6000613c91601983613582565b9150613c9c82613c5b565b602082019050919050565b60006020820190508181036000830152613cc081613c84565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613d0e57607f821691505b602082108103613d2157613d20613cc7565b5b50919050565b7f4469737472696275746f7220646f6573206e6f74206578697374000000000000600082015250565b6000613d5d601a83613582565b9150613d6882613d27565b602082019050919050565b60006020820190508181036000830152613d8c81613d50565b9050919050565b7f53756273746174696f6e20646f6573206e6f7420657869737400000000000000600082015250565b6000613dc9601983613582565b9150613dd482613d93565b602082019050919050565b60006020820190508181036000830152613df881613dbc565b9050919050565b7f506f77657220706c616e7420616c726561647920657869737473000000000000600082015250565b6000613e35601a83613582565b9150613e4082613dff565b602082019050919050565b60006020820190508181036000830152613e6481613e28565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613ea58261316b565b9150613eb08361316b565b9250828201905080821115613ec857613ec7613e6b565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302613f307fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613ef3565b613f3a8683613ef3565b95508019841693508086168417925050509392505050565b6000819050919050565b6000613f77613f72613f6d8461316b565b613f52565b61316b565b9050919050565b6000819050919050565b613f9183613f5c565b613fa5613f9d82613f7e565b848454613f00565b825550505050565b600090565b613fba613fad565b613fc5818484613f88565b505050565b5b81811015613fe957613fde600082613fb2565b600181019050613fcb565b5050565b601f82111561402e57613fff81613ece565b61400884613ee3565b81016020851015614017578190505b61402b61402385613ee3565b830182613fca565b50505b505050565b600082821c905092915050565b600061405160001984600802614033565b1980831691505092915050565b600061406a8383614040565b9150826002028217905092915050565b614083826131ce565b67ffffffffffffffff81111561409c5761409b613653565b5b6140a68254613cf6565b6140b1828285613fed565b600060209050601f8311600181146140e457600084156140d2578287015190505b6140dc858261405e565b865550614144565b601f1984166140f286613ece565b60005b8281101561411a578489015182556001820191506020850194506020810190506140f5565b868310156141375784890151614133601f891682614040565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006141868261316b565b91506141918361316b565b9250826141a1576141a061414c565b5b828204905092915050565b7f4469737472696275746f7220616c72656164792065786973747320776974682060008201527f7468652061646472657373000000000000000000000000000000000000000000602082015250565b6000614208602b83613582565b9150614213826141ac565b604082019050919050565b60006020820190508181036000830152614237816141fb565b9050919050565b7f4469737472696275746f7220646f6573206e6f74206578697374206f7220796f60008201527f7520617265206e6f7420746865206f776e657200000000000000000000000000602082015250565b600061429a603383613582565b91506142a58261423e565b604082019050919050565b600060208201905081810360008301526142c98161428d565b9050919050565b7f4f6e6c79206f776e657220616c6c6f7765640000000000000000000000000000600082015250565b6000614306601283613582565b9150614311826142d0565b602082019050919050565b60006020820190508181036000830152614335816142f9565b9050919050565b7f496e73756666696369656e7420656e6572677920617661696c61626c6520746f60008201527f2062757900000000000000000000000000000000000000000000000000000000602082015250565b6000614398602483613582565b91506143a38261433c565b604082019050919050565b600060208201905081810360008301526143c78161438b565b9050919050565b60006143d98261316b565b91506143e48361316b565b92508282039050818111156143fc576143fb613e6b565b5b92915050565b60006040820190506144176000830185613469565b6144246020830184613469565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006144658261316b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361449757614496613e6b565b5b600182019050919050565b7f53756273746174696f6e20646f6573206e6f74206578697374206f7220796f7560008201527f20617265206e6f7420746865206f776e65720000000000000000000000000000602082015250565b60006144fe603283613582565b9150614509826144a2565b604082019050919050565b6000602082019050818103600083015261452d816144f1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f506f7765706c616e7420646f6573206e6f74206578697374206f7220796f752060008201527f617265206e6f7420746865206f776e6572000000000000000000000000000000602082015250565b60006145bf603183613582565b91506145ca82614563565b604082019050919050565b600060208201905081810360008301526145ee816145b2565b9050919050565b7f53756273746174696f6e20616c7265616479206578697374732077697468207460008201527f68652063757272656e7420616464726573730000000000000000000000000000602082015250565b6000614651603283613582565b915061465c826145f5565b604082019050919050565b6000602082019050818103600083015261468081614644565b905091905056fea26469706673582212201ea40a2dbe068bae3828dfb4d80d2bdcf5a9ea1eae1bbfa597987f6f90e1b61664736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 120,
        "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
        "label": "powerPlants",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_struct(PowerPlant)115_storage)"
      },
      {
        "astId": 124,
        "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
        "label": "powerPlantsAddressToIds",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 130,
        "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
        "label": "powerPlantsDailyEnergyProducedById",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 136,
        "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
        "label": "powerPlantsDailyEnergySoldById",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 141,
        "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
        "label": "distributors",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_struct(Distributor)81_storage)"
      },
      {
        "astId": 145,
        "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
        "label": "distributorAddressToIds",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 151,
        "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
        "label": "distributorsDailyEnergyBoughtById",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 156,
        "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
        "label": "substations",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_struct(Substation)99_storage)"
      },
      {
        "astId": 160,
        "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
        "label": "substationsAddressToIds",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 166,
        "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
        "label": "substationsDailyEnergyBoughtById",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 172,
        "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
        "label": "substationsDailyEnergySoldById",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 174,
        "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
        "label": "powerPlantCount",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 176,
        "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
        "label": "distributorCount",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 178,
        "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
        "label": "substationCount",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_uint256,t_struct(Distributor)81_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct ElectricitySupplyChain.Distributor)",
        "numberOfBytes": "32",
        "value": "t_struct(Distributor)81_storage"
      },
      "t_mapping(t_uint256,t_struct(PowerPlant)115_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct ElectricitySupplyChain.PowerPlant)",
        "numberOfBytes": "32",
        "value": "t_struct(PowerPlant)115_storage"
      },
      "t_mapping(t_uint256,t_struct(Substation)99_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct ElectricitySupplyChain.Substation)",
        "numberOfBytes": "32",
        "value": "t_struct(Substation)99_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Distributor)81_storage": {
        "encoding": "inplace",
        "label": "struct ElectricitySupplyChain.Distributor",
        "members": [
          {
            "astId": 65,
            "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
            "label": "substationId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 67,
            "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
            "label": "distributorAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 69,
            "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
            "label": "name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 71,
            "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
            "label": "area",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 73,
            "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
            "label": "energyAvailable",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 76,
            "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
            "label": "consumerIds",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 78,
            "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
            "label": "totalEnergySold",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 80,
            "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
            "label": "totalEnergyBought",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_struct(PowerPlant)115_storage": {
        "encoding": "inplace",
        "label": "struct ElectricitySupplyChain.PowerPlant",
        "members": [
          {
            "astId": 101,
            "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 103,
            "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
            "label": "area",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 105,
            "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
            "label": "powerplantAddress",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 108,
            "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
            "label": "substationIds",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 110,
            "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
            "label": "totalEnergyProduced",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 112,
            "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
            "label": "totalEnergySold",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 114,
            "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
            "label": "energyAvailableToBuy",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(Substation)99_storage": {
        "encoding": "inplace",
        "label": "struct ElectricitySupplyChain.Substation",
        "members": [
          {
            "astId": 83,
            "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 85,
            "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
            "label": "area",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 87,
            "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
            "label": "powerplantId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 89,
            "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
            "label": "substationAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 91,
            "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
            "label": "totalEnergyReceived",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 93,
            "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
            "label": "totalEnergySold",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 96,
            "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
            "label": "distributorIds",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 98,
            "contract": "contracts/ElectricitySupplyChain.sol:ElectricitySupplyChain",
            "label": "energyAvailableToBuy",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}